{"version":3,"file":"static/js/470.4c85ab83.chunk.js","mappings":"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","sources":["hooks/UseCastInfo.jsx","components/Cast/Cast.styled.jsx","components/Cast/CastList.jsx","pages/Cast.js"],"sourcesContent":["import { getCastInfo } from 'api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const UseCastInfo = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    setIsLoading(true);\n\n    const getCast = async movieId => {\n      try {\n        const { cast } = await getCastInfo(movieId, signal);\n        setActors(cast);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(true);\n        }\n      } finally {\n        setIsLoading(true);\n      }\n    };\n    getCast(movieId);\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n  return { actors, movieId, error, isLoading };\n};\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 12px;\n  align-items: center;\n  margin-top: 15px;\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  min-height: 120px;\n\n  gap: 10px;\n  align-items: center;\n  padding: 10px;\n  flex-basis: calc((100% - 36px) / 4);\n\n  box-shadow: 0px 2px 8px 1px ${({ theme }) => theme.colors.accent};\n  box-shadow: 0px 2px 8px 1px #8b0000;\n  border-radius: 20px;\n  transition: transform ${({ theme }) => theme.animations.cubicBezier};\n  transform: scale(0.9);\n\n  &:hover,\n  :focus {\n    transform: scale(1);\n  }\n`;\n\nexport const CastPhoto = styled.img`\n  width: 100px;\n  height: 100px;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n  border-radius: 20px;\n`;\n\nexport const Name = styled.p`\n  font-weight: 500;\n`;\n\nexport const Description = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import {\n  CastList,\n  CastItem,\n  CastPhoto,\n  Description,\n  Name,\n} from './Cast.styled';\nimport { BsFillPersonVcardFill } from 'react-icons/bs';\nconst imgUrl = 'https://image.tmdb.org/t/p/original';\n\nexport const CastListEl = ({ actors }) => {\n  return (\n    <CastList>\n      {actors.map(actor => (\n        <CastItem key={actor.id}>\n          {actor.profile_path ? (\n            <CastPhoto src={imgUrl + actor.profile_path} alt={actor.name} />\n          ) : (\n            <BsFillPersonVcardFill color=\"#8b0000\" size=\"55px\" />\n          )}\n          <Description>\n            <Name>{actor.name}</Name>\n            <Name>Role: {actor.character}</Name>\n          </Description>\n        </CastItem>\n      ))}\n    </CastList>\n  );\n};\n","import { UseCastInfo } from 'hooks/UseCastInfo';\nimport { Container, Heading, Section } from 'components/App/App.styled';\nimport { CastListEl } from '../components/Cast/CastList';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader/Loader';\nimport { motion } from 'framer-motion';\n\nexport default function Cast() {\n  const { actors, error, isLoading } = UseCastInfo();\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n      transition={{ duration: 0.2, ease: 'easeIn', delay: 1 }}\n    >\n      <Section>\n        <Container>\n          <Heading>Cast</Heading>\n          {error && toast.error('Something went wront!!!')}\n          {isLoading && <Loader />}\n          {actors.length > 0 && <CastListEl actors={actors} />}\n        </Container>\n      </Section>\n    </motion.div>\n  );\n}\n"],"names":["UseCastInfo","movieId","useParams","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","useEffect","controller","AbortController","signal","getCast","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$getCastInfo","cast","wrap","_context","prev","next","getCastInfo","sent","t0","code","finish","stop","_x","apply","arguments","abort","CastList","styled","_templateObject","_taggedTemplateLiteral","CastItem","_templateObject2","theme","colors","accent","_ref2","animations","cubicBezier","CastPhoto","_templateObject3","Name","_templateObject4","Description","_templateObject5","CastListEl","_jsx","children","map","actor","_jsxs","profile_path","src","alt","name","BsFillPersonVcardFill","color","size","character","id","Cast","_UseCastInfo","motion","initial","opacity","animate","exit","transition","duration","ease","delay","Section","Container","Heading","toast","Loader","length"],"sourceRoot":""}