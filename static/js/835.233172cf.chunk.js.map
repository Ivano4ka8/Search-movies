{"version":3,"file":"static/js/835.233172cf.chunk.js","mappings":"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","sources":["api.js","components/MovieDetailsCard/MovieDetailsCard.styled.jsx","components/MovieDetailsCard/MovieDetailsCard.jsx","hooks/UseMovieDetails.jsx","pages/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '1af137eef8f116a60d13f93df04b300d';\n\nexport const getTrendFilmsOnDay = async (param, signal) => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/${param}?api_key=${API_KEY}`,\n    { signal: signal }\n  );\n  return data;\n};\n\nexport const searchMovies = async (name, signal) => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${name}`,\n    { signal: signal }\n  );\n  return data;\n};\n\nexport const getReviews = async (id, signal) => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`,\n    { signal: signal }\n  );\n  return data;\n};\n\nexport const getMovieDetails = async (id, signal) => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}`,\n    { signal: signal }\n  );\n  return data;\n};\n\nexport const getCastInfo = async (id, signal) => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`,\n    { signal: signal }\n  );\n  return data;\n};\n","import styled from 'styled-components';\nimport { theme } from 'styles';\n\nexport const Title = styled.h1`\n  margin-bottom: 16px;\n`;\nexport const Poster = styled.img`\n  width: 300px;\n  height: 400px;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n  border-radius: 20px;\n`;\nexport const VoteAverage = styled.span`\n  margin-bottom: 15px;\n`;\nexport const Text = styled.p`\n  margin-bottom: 12px;\n`;\nexport const MovieWrapper = styled.div`\n  position: relative;\n  display: flex;\n  gap: 32px;\n  align-items: flex-start;\n  box-shadow: 0px 2px 8px 1px #8b0000;\n  border-radius: 20px;\n`;\n\nexport const BackBtn = styled.button`\n  padding: 5px 10px;\n  margin-bottom: 15px;\n  border-radius: 4px;\n  background-color: ${theme.colors.accent};\n  font-size: ${theme.fontSizes.medium};\n  font-weight: 500;\n  color: ${theme.colors.white};\n  border: 2px solid ${theme.colors.light};\n\n  transition: all ${theme.animations.cubicBezier};\n\n  &:hover,\n  &:focus {\n    background-color: ${theme.colors.white};\n    color: ${theme.colors.accent};\n  }\n`;\n\nexport const CastBtn = styled(BackBtn)``;\nexport const ReviewsBtn = styled(BackBtn)``;\nexport const LinkWrapper = styled.div`\n  position: absolute;\n  bottom: 15px;\n  right: 15px;\n  display: flex;\n  gap: 10px;\n`;\n\nexport const DescriptionWrapper = styled.div`\n  margin-top: 10px;\n`;\n","import {\n  Title,\n  Poster,\n  VoteAverage,\n  Text,\n  DescriptionWrapper,\n} from './MovieDetailsCard.styled';\nimport 'react-toastify/dist/ReactToastify.css';\nconst imgUrl = 'https://image.tmdb.org/t/p/original/';\n\nexport const MovieDetailsCard = ({\n  details: { title, poster_path, vote_average, genres, overview, release_date },\n}) => {\n  const poster = imgUrl + poster_path;\n  const genresName = genres.map(genre => genre.name).join(' ,  ');\n\n  return (\n    <>\n      <Poster src={poster} alt={title} />\n      <DescriptionWrapper>\n        <Title>{title}</Title>\n        <VoteAverage>\n          <b>User score:</b> {Math.round(vote_average * 10)}%\n        </VoteAverage>\n        <Text>\n          <b>Genres:</b> {genresName}\n        </Text>\n        <Text>{overview}</Text>\n        <Text style={{ marginBottom: 0 }}>\n          <b>Release date: </b>\n          {release_date}\n        </Text>\n      </DescriptionWrapper>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'api';\n\nexport const UseMovieDetails = () => {\n  const { movieId } = useParams();\n  const [info, setInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    setIsLoading(true);\n\n    const getDetails = async id => {\n      try {\n        const details = await getMovieDetails(id, signal);\n        setInfo(details);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(true);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getDetails(movieId);\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return {\n    isLoading,\n    error,\n    info,\n  };\n};\n","import { MovieDetailsCard } from 'components/MovieDetailsCard/MovieDetailsCard';\nimport { Container, Section } from 'components/App/App.styled';\nimport { Suspense, useRef } from 'react';\nimport { Outlet, Link, useLocation } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { UseMovieDetails } from 'hooks/UseMovieDetails';\nimport {\n  MovieWrapper,\n  BackBtn,\n  CastBtn,\n  ReviewsBtn,\n  LinkWrapper,\n} from '../components/MovieDetailsCard/MovieDetailsCard.styled';\n\nexport default function MovieId() {\n  const { isLoading, error, info } = UseMovieDetails();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  return (\n    <main>\n      <Section>\n        <Container>\n          <Link to={backLinkHref.current}>\n            <BackBtn type=\"button\">Back</BackBtn>\n          </Link>\n          <MovieWrapper>\n            <LinkWrapper>\n              <Link to=\"cast\">\n                <CastBtn type=\"button\">Cast</CastBtn>\n              </Link>\n              <Link to=\"reviews\">\n                <ReviewsBtn type=\"button\">Reviews</ReviewsBtn>\n              </Link>\n            </LinkWrapper>\n            {isLoading && <Loader />}\n            {error && toast.error('Something went wront')}\n            {info && <MovieDetailsCard details={info} />}\n          </MovieWrapper>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </Container>\n      </Section>\n      <ToastContainer />\n    </main>\n  );\n}\n"],"names":["BASE_URL","API_KEY","getTrendFilmsOnDay","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","param","signal","_yield$axios$get","data","wrap","_context","prev","next","axios","concat","sent","abrupt","stop","_x","_x2","apply","arguments","searchMovies","_ref2","_callee2","name","_yield$axios$get2","_context2","_x3","_x4","getReviews","_ref3","_callee3","id","_yield$axios$get3","_context3","_x5","_x6","getMovieDetails","_ref4","_callee4","_yield$axios$get4","_context4","_x7","_x8","getCastInfo","_ref5","_callee5","_yield$axios$get5","_context5","_x9","_x10","Title","styled","_templateObject","_taggedTemplateLiteral","Poster","_templateObject2","VoteAverage","_templateObject3","Text","_templateObject4","MovieWrapper","_templateObject5","BackBtn","_templateObject6","theme","CastBtn","_templateObject7","ReviewsBtn","_templateObject8","LinkWrapper","_templateObject9","DescriptionWrapper","_templateObject10","MovieDetailsCard","_ref$details","details","title","poster_path","vote_average","genres","overview","release_date","poster","genresName","map","genre","join","_jsxs","_Fragment","children","_jsx","src","alt","Math","round","style","marginBottom","UseMovieDetails","movieId","useParams","_useState","useState","_useState2","_slicedToArray","info","setInfo","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","controller","AbortController","getDetails","t0","code","finish","abort","MovieId","_location$state$from","_location$state","_UseMovieDetails","location","useLocation","backLinkHref","useRef","state","from","Section","Container","Link","to","current","type","Loader","toast","Suspense","fallback","Outlet","ToastContainer"],"sourceRoot":""}