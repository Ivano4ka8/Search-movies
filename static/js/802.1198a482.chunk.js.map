{"version":3,"file":"static/js/802.1198a482.chunk.js","mappings":"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","sources":["components/MovieDetailsCard/MovieDetails.styled.jsx","hooks/UseMovieDetails.jsx","components/MovieDetailsCard/MovieDetails.jsx","pages/MovieDetails.js"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'styles';\n\nexport const Title = styled.h1`\n  margin-bottom: 16px;\n`;\nexport const Poster = styled.img`\n  width: 300px;\n  height: 400px;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n  border-radius: 20px;\n`;\nexport const VoteAverage = styled.span`\n  margin-bottom: 15px;\n`;\nexport const Text = styled.p`\n  margin-bottom: 12px;\n`;\nexport const MovieWrapper = styled.div`\n  position: relative;\n  display: flex;\n  gap: 32px;\n  align-items: flex-start;\n  box-shadow: 0px 2px 8px 1px #8b0000;\n  border-radius: 20px;\n`;\n\nexport const BackBtn = styled.button`\n  padding: 5px 10px;\n  border-radius: 4px;\n  background-color: ${theme.colors.accent};\n  font-size: ${theme.fontSizes.medium};\n  font-weight: 500;\n  color: ${theme.colors.white};\n  border: 2px solid ${theme.colors.light};\n\n  transition: all ${theme.animations.cubicBezier};\n\n  &:hover,\n  &:focus {\n    background-color: ${theme.colors.white};\n    color: ${theme.colors.accent};\n  }\n`;\n\nexport const CastBtn = styled(BackBtn)``;\nexport const ReviewsBtn = styled(BackBtn)``;\nexport const LinkWrapper = styled.div`\n  position: absolute;\n  bottom: 15px;\n  right: 15px;\n  display: flex;\n  gap: 10px;\n`;\n\nexport const DescriptionWrapper = styled.div`\n  margin-top: 10px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'api';\nconst imgUrl = 'https://image.tmdb.org/t/p/original';\n\nexport const UseMovieDetails = () => {\n  const { movieId } = useParams();\n  const [poster_path, setPoster] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [overview, setOverview] = useState('');\n  const [release_date, setRelease_date] = useState('');\n  const [title, setTitle] = useState('');\n  const [vote_average, setAverage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    setIsLoading(true);\n\n    const getDetails = async id => {\n      try {\n        const {\n          poster_path,\n          genres,\n          overview,\n          release_date,\n          title,\n          vote_average,\n        } = await getMovieDetails(id, signal);\n\n        setPoster(imgUrl + poster_path);\n        setGenres(genres.map(genre => genre.name));\n        setOverview(overview);\n        setRelease_date(release_date);\n        setTitle(title);\n        setAverage(Math.round(vote_average * 10));\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(true);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getDetails(movieId);\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId, vote_average]);\n\n  return {\n    isLoading,\n    error,\n    poster_path,\n    title,\n    overview,\n    release_date,\n    vote_average,\n    genres,\n    location,\n  };\n};\n","import { Loader } from '../Loader/Loader';\nimport { ToastContainer, toast } from 'react-toastify';\nimport {\n  Title,\n  Poster,\n  VoteAverage,\n  Text,\n  MovieWrapper,\n  BackBtn,\n  CastBtn,\n  ReviewsBtn,\n  LinkWrapper,\n  DescriptionWrapper,\n} from './MovieDetails.styled';\nimport { Link } from 'react-router-dom';\nimport { useRef } from 'react';\nimport { UseMovieDetails } from 'hooks/UseMovieDetails';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function MovieDetails() {\n  const {\n    isLoading,\n    error,\n    poster_path,\n    title,\n    overview,\n    release_date,\n    vote_average,\n    genres,\n    location,\n  } = UseMovieDetails();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && toast.error('Something went wrong')}\n      <MovieWrapper>\n        <LinkWrapper>\n          <Link to={backLinkHref.current}>\n            <BackBtn type=\"button\">Back</BackBtn>\n          </Link>\n          <Link to=\"cast\">\n            <CastBtn type=\"button\">Cast</CastBtn>\n          </Link>\n          <Link to=\"reviews\">\n            <ReviewsBtn type=\"button\">Reviews</ReviewsBtn>\n          </Link>\n        </LinkWrapper>\n        <Poster src={poster_path} alt={title}></Poster>\n        <DescriptionWrapper>\n          <Title>{title}</Title>\n          <VoteAverage>\n            <b>User score:</b> {vote_average}%\n          </VoteAverage>\n          <Text>\n            <b>Genres:</b> {genres.join(',    ')}\n          </Text>\n          <Text>{overview}</Text>\n          <Text style={{ marginBottom: 0 }}>\n            <b>Release date: </b>\n            {release_date}\n          </Text>\n        </DescriptionWrapper>\n      </MovieWrapper>\n      <ToastContainer />\n    </>\n  );\n}\n","import MovieDetails from 'components/MovieDetailsCard/MovieDetails';\nimport { Container, Section } from 'components/App/App.styled';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function MovieId() {\n  return (\n    <main>\n      <Section>\n        <Container>\n          <MovieDetails />\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </Container>\n      </Section>\n    </main>\n  );\n}\n"],"names":["Title","styled","_templateObject","_taggedTemplateLiteral","Poster","_templateObject2","VoteAverage","_templateObject3","Text","_templateObject4","MovieWrapper","_templateObject5","BackBtn","_templateObject6","theme","CastBtn","_templateObject7","ReviewsBtn","_templateObject8","LinkWrapper","_templateObject9","DescriptionWrapper","_templateObject10","UseMovieDetails","movieId","useParams","_useState","useState","_useState2","_slicedToArray","poster_path","setPoster","_useState3","_useState4","genres","setGenres","_useState5","_useState6","overview","setOverview","_useState7","_useState8","release_date","setRelease_date","_useState9","_useState10","title","setTitle","_useState11","_useState12","vote_average","setAverage","_useState13","_useState14","isLoading","setIsLoading","_useState15","_useState16","error","setError","location","useLocation","useEffect","controller","AbortController","signal","getDetails","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","_yield$getMovieDetail","_poster_path","_genres","_overview","_release_date","_title","_vote_average","wrap","_context","prev","next","getMovieDetails","sent","map","genre","name","Math","round","t0","code","finish","stop","_x","apply","arguments","abort","MovieDetails","_location$state$from","_location$state","_UseMovieDetails","backLinkHref","useRef","state","from","_jsxs","_Fragment","children","_jsx","Loader","toast","Link","to","current","type","src","alt","join","style","marginBottom","ToastContainer","MovieId","Section","Container","Suspense","fallback","Outlet"],"sourceRoot":""}